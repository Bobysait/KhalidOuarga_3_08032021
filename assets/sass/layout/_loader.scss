/* see animators for keyframes */

.anim-length {
	&-small {
		animation				: loader__anim 1500ms forwards;
	}
	&-medium {
		animation				: loader__anim 2s forwards;
	}
	&-long {
		animation				: loader__anim 4s forwards;
	}
}

@mixin emit-word($word,$fontsize,$col,$anim, $opacity){
	content						: $word;
	font-size					: $fontsize;
	color						: $col;
	animation					: map-get($anim, "name") map-get($anim, "length") map-get($anim, "style") map-get($anim,"mode");
	opacity						: $opacity;
}

.loader {
	position					: fixed;
	top							: 0px;
	bottom						: 0px;
	left						: 0px;
	right						: 0px;
	margin						: 0;
	padding						: 0;
	
	z-index						: 10;
	
	opacity						: 0;
	$c1							: $colour_secondary;
	$c2							: $colour_primary;

	background					: repeating-linear-gradient(
										45deg,
										darken($c1, 15%),
										lighten($c1, 10%) 200px,
										lighten($c2, 10%) 200px,
										darken($c2, 15%) 400px
	  								);

	/* encapsulate the actors (circle, stove, particles) */
	&__actors {
		position				: relative;
		display					: flex;
		justify-content			: center;
		align-content			: center;
		align-items				: center;
		width					: 100%;
		height					: 100%;
		background				: radial-gradient(rgba($colour_secondary,0.7),darken(rgba($colour_primary,1),50%));
	/*	background				: radial-gradient($colour_secondary,$colour_primary); */
	/*	background				: radial-gradient($colour_secondary,darken($colour_primary,50%)); */
	}

	/* a grey circle as background for the stove */
	&__circle {
		position				: absolute;
		width					: 300px;
		height					: 300px;
		border-radius			: 100%;
		background				: #444;
		transform				: translate(-10px,-25px);
		animation				: loader__anim--circle 3s infinite ease-in-out;
		
		&::before {
			content				: "";
			position			: absolute;
			top : 0; bottom : 0; left : 0; right : 0;
			border-radius		: 100%;
			box-shadow			: 1rem 1rem $loader-circle-shadow-blur-1 $loader-circle-shadow-color;
			opacity 			: 1;
			animation			: loader__anim--circle-1 3s infinite ease-in-out;
		}
		&::after {
			content				: "";
			position			: absolute;
			top : 0; bottom : 0; left : 0; right : 0;
			border-radius		: 100%;
			box-shadow			: 1rem 1rem $loader-circle-shadow-blur-2 $loader-circle-shadow-color;
			opacity 			: 0;
			animation			: loader__anim--circle-2 3s infinite ease-in-out;
		}
	}
	&__stove {
		position				: relative;
		top						: 30px;
		animation				: loader__anim--stove 2s linear infinite;

		&__container {
			stroke				: #9356DC;
			stroke-width		: 5px;
			fill				: transparent;
		}
		
		&__content {
			fill				: #FD8;
		}
		
	}

	&__emitter {
		/* each emitter can generate a "particule" ":before" and ":after" */
		position				: relative;
		
		&::before, &::after {
			position			: absolute;
		}
		
		&:nth-child(2)::before {
			@include			emit-word("Oh",20px,#fd8,("name":loader__anim--oh, "length":1.1s, "style":linear,"mode":infinite), 1);
		}
		&:nth-child(2)::after {
			@include			emit-word("Oh",20px,$colour_primary,("name":loader__anim--oh-2, "length":1.1s, "style":linear,"mode":infinite), 0);
		}
		&:nth-child(3)::before {
			@include			emit-word("My",18px,#fd8,("name":loader__anim--my, "length":1.3s, "style":linear,"mode":infinite), 1);
		}
		&:nth-child(3)::after {
			@include			emit-word("My",18px,$colour_secondary,("name":loader__anim--my-2, "length":1.3s, "style":linear,"mode":infinite), 0);
		}
		&:nth-child(4)::before {
			@include			emit-word("food",15px,#fd8,("name":loader__anim--food, "length":0.9s, "style":linear,"mode":infinite), 1);
		}
		&:nth-child(4)::after {
			@include			emit-word("food",15px,$colour_tertiary,("name":loader__anim--food-2, "length":0.9s, "style":linear,"mode":infinite), 0);
		}
	}
}
